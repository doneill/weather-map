apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.jdoneill.weathermap"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        versionCode getBuildNumber()
        versionName "${rootProject.ext.versionName}-${getBuildNumber()}"

        archivesBaseName = "$APP_NAME-$versionName"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        project.hasProperty('API_KEY') ? buildConfigField("String", "API_KEY", API_KEY) : buildConfigField("String", "API_KEY", "\"\"")
        project.hasProperty('PLACES_API_KEY') ? buildConfigField("String", "PLACES_API_KEY", PLACES_API_KEY) : buildConfigField("String", "PLACES_API_KEY", "\"\"")
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "androidx.appcompat:appcompat:$andXVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.esri.arcgisruntime:arcgis-android:$arcgisVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    // memory leak checker
    debugImplementation"com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
    // test dependencies
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$andXJunitVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.archLifecycleVersion"
}

task runDebugApp(type: Exec) {
    dependsOn 'installDebug'
    def adb = new File("${System.env.ANDROID_HOME}", "platform-tools${File.separator}adb")
    commandLine adb, "shell", "am", "start", "-n", "com.jdoneill.weathermap/com.jdoneill.weathermap.ui.MainActivity"
}

static def getBuildNumber() {
    return "git rev-list --count HEAD".execute().text.trim().toInteger()
}
